1. Crear la clase billetes
2. Llenar la variable caja de billetes
3. Determinar la cantidad de dinero que el usuario introdujo
4. Ejecutar el algoritmo cuando el usuario de clic al botón extraer



Casteo (casting): También conocido como conversión de tipo, es un procedimiento para transformar una variable primitiva de un tipo a otro.
 
 RETO
1. Mostrar imágenes en vez de numeros
2. Ir restando dinero al array caja sin tener que recargar la pagina y mostrar cada entrega de dinero (el monto total) y ver cuanto me va quedando. como movimientos hr
3. Reducir código



Siempre se ejecuta primero las clases y las funciones y después las líneas independientes


innerHTML en vez de document.write


PASOS:
1. Estructura HTML
	p img src=" p
	p input type number button value id
	script src".js"
	
2. class Billete
{
	constructor(valor, cantidad)

3. Array asociativo con push[]
caja.push(new Billete(50, 3);

4. Asignar dinero a retirar estatico = 210;

5. Array asociativo entregado = []

6. Asignar todas las variables
var dineroRetirar = 210;
var div = 0;
var papeles = 0; 

7. revisar consola
Billete;
caja;
dinero

8. Llamar al boton
var boton = document.getElementById("extraer);
boton.addEventListener("click", entregarDinero);

9. Crear function entregarDinero() probar codigo
{
 for(var bi of caja)
 {
 	console.log(bi
}

10. condicional Probar codigo click en boton
if(dinero > 0
 div = Math.floor(dineroDesp / bi.valor);
 console.log(div);
 
11. Corroborar cantidad de billetes
if(div > bi.cantidad)
{
	papeles = bi.cantidad;
	
else
{
	papeles = div;

12. Restar dinero que ya entregue o calcule en la iteracion anterior 

entregado.push(new Billete(bi.valor, papeles);
dinero = dinero - (bi.valor * papeles);

console.log(entregado);

13. Agregar Fondos insuficientes

if(dinero > 0)
{
doment.write("Fondos insuficiente

14. Probar codigo con valores ingresados por el usuario

var dinero = 0;

function entregarDinero
{
	var texto = document.getElementById("dinero"
	dinero = parseInt(t.value);

15. Casi al final de la función agregar código para mostrar resultados en pantalla recorriendo el array entregado

else
{
	for(var e of entregado)
	{
		documen.write(e.cantidad + "billetes de $" + e.valor + "<br>);
 

16. Corregir carga de imagen en el HTML
Esto pasa por invocar document.write después de la carga de todo el documento, entonces solo se le dara prioridad al doc.write por eso solo aparecerán los últimos resultados. 
Para darle solución podemos agregar un appendChild o crear una etiqueta vacia y al contenido interno cambiarle el HTML
en HTML debajo de los input
p id="resultado"> </p

Debajo de todas las variables agregar:
var resultado = document.getElementById("resultado);

Ahora dentro del if Dinero insuficiente:
resultado.innerHTML = "Fondos insuficientes";

Esto igualmente para el else for que muestra los resultados:
resultado.innerHTML = resultado.innerHTML + e.cantidad + etc

NOTA: colocan resultado = resultado porque de lo contrario solo mostrar el ultimo billete por eso se concatena el valor anterior que tenia. 

17. document.write es una mala practica
se debe usar resultado.innerHTML

18. revisar consola ingresando un valor que el programa no puede entregar como 105 
console.log(entrega);
dinero;

Esto se corrige cambiando el valor dentro de caja. se agregan billetes de 5 y listo.

19. No mostrar los billetes no entregados
Dentro del 
else 
	for
		if(e.cantidad > 0
		{
			resultado.innerHTML = result etc $ billetes
	
		}
		
Si la cantidad de billetes es mayor a cero entonces si debe mostrar el pantalla el dato de lo contrario al ser cero no lo mostrará.
		

